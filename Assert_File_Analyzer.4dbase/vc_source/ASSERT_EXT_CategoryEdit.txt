//%attributes = {"lang":"en"} comment added and reserved by 4D.
// --[HEADERSTART]-------------------------------------
// User name (OS): Joshua Fletcher
// Date and time: 03/19/13, 15:23:08
// ----------------------------------------------------
// Description:
//   Modify an entry category in ASSERT_EntryCategory.
// --[HEADEREND]---------------------------------------
C_LONGINT($1;$catID_l)
C_TEXT($2;$catName_t)
C_TEXT($3;$catValue_t)
C_LONGINT($4;$catOrder_l)

C_BOOLEAN($5;$overwrite_f)// Optional

C_LONGINT($0;$error_l)

C_LONGINT($catExists_l)

$catID_l:=$1
$catName_t:=$2
$catValue_t:=$3
$catOrder_l:=$4

If (Count parameters>4)
$overwrite_f:=$5
Else 
$overwrite_f:=True// Default to overwrite.
End if 

// Open external database.
$error_l:=EXT_Open 

If ($error_l=0)

// Always clear values for variables passed to SQL calls;
// if no records are found, 4D doesn't modify the variables
// (meaning previous values remain).
$catExists_l:=0

If ($catID_l#0)
// Test to see if the record already exists...
UTIL_ERR_HandlerInstall 
Begin SQL
SELECT COUNT( categoryID )
FROM ASSERT_EntryCategory
WHERE categoryID = :$catID_l
INTO :$catExists_l;
End SQL
$error_l:=UTIL_ERR_HandlerRemove 
End if 

If ($error_l=0)
// I didn't add further 4D error handling in
// the following code (i.e. per-SQL statement)
// because if the above query works chances are
// things are ok and the error handling just
// makes the code harder to read.

If ($catExists_l=0)

// If it doesn't exist, create it.
Begin SQL
INSERT INTO ASSERT_EntryCategory
(
   categoryName,
   categoryPattern,
   categoryOrder 
)
VALUES
(
   :$catName_t,
   :$catValue_t,
   :$catOrder_l
);
End SQL

Else 

// Record exists, see if the user wants the value overwritten.
If ($overwrite_f)
Begin SQL
UPDATE ASSERT_EntryCategory
SET
   categoryName = :$catName_t,
   categoryPattern = :$catValue_t,
   categoryOrder = :$catOrder_l
WHERE categoryID = :$catID_l;
End SQL
End if 
End if 

End if 


If ($error_l=0)
// Close external database.
$error_l:=EXT_Close 
Else 
UTIL_ERR_ErrorMethod_t:=Current method name
// Still close the external database if another problem
// occurred but don't overwrite the error code.
EXT_CloseIfError 
End if 

End if 

$0:=$error_l
